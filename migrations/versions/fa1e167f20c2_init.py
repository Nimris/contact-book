"""Init

Revision ID: fa1e167f20c2
Revises: 
Create Date: 2024-12-02 09:18:34.206925

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from src.auth.models import Role
from src.auth.shema import RoleEnum


# revision identifiers, used by Alembic.
revision: str = 'fa1e167f20c2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_contacts_email', table_name='contacts')
    op.drop_index('ix_contacts_id', table_name='contacts')
    op.drop_index('ix_contacts_name', table_name='contacts')
    op.drop_index('ix_contacts_phone', table_name='contacts')
    op.drop_index('ix_contacts_surname', table_name='contacts')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    # ### end Alembic commands ###
    
    op.bulk_insert(Role.__table__, [{'name': RoleEnum.USER.value}, {'name': RoleEnum.ADMIN.value}])


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('avatar', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='users_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('name', name='roles_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('contacts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('birthday', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='contacts_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='contacts_pkey')
    )
    op.create_index('ix_contacts_surname', 'contacts', ['surname'], unique=False)
    op.create_index('ix_contacts_phone', 'contacts', ['phone'], unique=False)
    op.create_index('ix_contacts_name', 'contacts', ['name'], unique=False)
    op.create_index('ix_contacts_id', 'contacts', ['id'], unique=False)
    op.create_index('ix_contacts_email', 'contacts', ['email'], unique=True)
    # ### end Alembic commands ###
